{% extends 'base.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/testsnew.css') }}">
{% endblock %}

{% block body %}
    {% if app.user %}
    <script src="/js/redirect.js"></script>
        <script>
        document.addEventListener('DOMContentLoaded', function () {
            const conduiteBalleInput = document.querySelector('#{{ form.conduiteballe.vars.id }}');
            const vitesseInput = document.querySelector('#{{ form.vitesse.vars.id }}');

            const formatTimeInput = function (input) {
                let value = input.value.trim();

                // Supprimer les caractères non numériques et le point en excès
                value = value.replace(/[^0-9,.]/g, '');

                // Remplacer la virgule par un point si nécessaire
                if (value.includes(',')) {
                    value = value.replace(',', '.');
                }

                // Limiter à un seul point et trois chiffres après la virgule
                const parts = value.split('.');
                if (parts.length > 1) {
                    const integerPart = parts[0];
                    const decimalPart = parts[1].slice(0, 3);

                    // Mettre à jour la valeur avec le format x.xxx ou xx.xxx
                    if (integerPart.length <= 2 && decimalPart.length === 3) {
                        value = `${integerPart}.${decimalPart}`;
                    }
                } else if (value.length <= 3) {
                    // Mettre à jour la valeur en ajoutant un point pour le format 1234 -> 1.234
                    value = `${value.slice(0, 1)}.${value.slice(1)}`;
                }

                // Mettre à jour la valeur dans le champ
                input.value = value;
            };

            conduiteBalleInput.addEventListener('input', function () {
                formatTimeInput(this);
            });

            vitesseInput.addEventListener('input', function () {
                formatTimeInput(this);
            });
        });
    </script>

    <div class="container">
        <h1>Nouveau Test</h1>

       {{ form_start(form, {'method': 'POST'}) }}
        
        <div class="form-group {% if form.vma.vars.errors|length > 0 %}has-error{% endif %}">
            {{ form_label(form.vma, 'VMA (0 à 20 km/h)', {'label_attr': {'class': 'form-label'}}) }}
            {{ form_widget(form.vma, {'attr': {'class': 'form-input'}}) }}
            {{ form_errors(form.vma, {'attr': {'class': 'error-message'}}) }}
        </div>

        <div class="form-group {% if form.demicooper.vars.errors|length > 0 %}has-error{% endif %}">
            {{ form_label(form.demicooper, 'Demi-Cooper (mètres)', {'label_attr': {'class': 'form-label'}}) }}
            {{ form_widget(form.demicooper, {'attr': {'class': 'form-input'}}) }}
            {{ form_errors(form.demicooper, {'attr': {'class': 'error-message'}}) }}
        </div>

        <div class="form-group {% if form.cooper.vars.errors|length > 0 %}has-error{% endif %}">
            {{ form_label(form.cooper, 'Cooper (mètres)', {'label_attr': {'class': 'form-label'}}) }}
            {{ form_widget(form.cooper, {'attr': {'class': 'form-input'}}) }}
            {{ form_errors(form.cooper, {'attr': {'class': 'error-message'}}) }}
        </div>

        <div class="form-group {% if form.jongle_gauche.vars.errors|length > 0 %}has-error{% endif %}">
            {{ form_label(form.jongle_gauche, 'Jongle Gauche (0 à 50)', {'label_attr': {'class': 'form-label'}}) }}
            {{ form_widget(form.jongle_gauche, {'attr': {'class': 'form-input'}}) }}
            {{ form_errors(form.jongle_gauche, {'attr': {'class': 'error-message'}}) }}
        </div>

        <div class="form-group {% if form.jongle_droit.vars.errors|length > 0 %}has-error{% endif %}">
            {{ form_label(form.jongle_droit, 'Jongle Droit (0 à 50)', {'label_attr': {'class': 'form-label'}}) }}
            {{ form_widget(form.jongle_droit, {'attr': {'class': 'form-input'}}) }}
            {{ form_errors(form.jongle_droit, {'attr': {'class': 'error-message'}}) }}
        </div>

        <div class="form-group {% if form.jongle_tete.vars.errors|length > 0 %}has-error{% endif %}">
            {{ form_label(form.jongle_tete, 'Jongle Tête (0 à 30)', {'label_attr': {'class': 'form-label'}}) }}
            {{ form_widget(form.jongle_tete, {'attr': {'class': 'form-input'}}) }}
            {{ form_errors(form.jongle_tete, {'attr': {'class': 'error-message'}}) }}
        </div>

        <div class="form-group {% if form.conduiteballe.vars.errors|length > 0 %}has-error{% endif %}">
            {{ form_label(form.conduiteballe, 'Conduite de balle', {'label_attr': {'class': 'form-label'}}) }}
            {{ form_widget(form.conduiteballe, {'attr': {'class': 'form-input', 'placeholder': 'Entrez le temps en secondes et millisecondes (s.mmm) !', 'type': 'text'}}) }}
            {{ form_errors(form.conduiteballe, {'attr': {'class': 'error-message'}}) }}
        </div>

        <div class="form-group {% if form.vitesse.vars.errors|length > 0 %}has-error{% endif %}">
            {{ form_label(form.vitesse, 'Vitesse', {'label_attr': {'class': 'form-label'}}) }}
            {{ form_widget(form.vitesse, {'attr': {'class': 'form-input', 'placeholder': 'Entrez le temps en secondes et millisecondes (s.mmm) !', 'type': 'text'}}) }}
            {{ form_errors(form.vitesse, {'attr': {'class': 'error-message'}}) }}
        </div>

        <div class="form-group {% if form.video.vars.errors|length > 0 %}has-error{% endif %}">
            {{ form_label(form.video, 'video', {'label_attr': {'class': 'form-label'}}) }}
            {{ form_widget(form.video, {'attr': {'class': 'form-input'}}) }}
            {{ form_errors(form.video, {'attr': {'class': 'error-message'}}) }}
        </div>

 


        {% if is_granted("ROLE_SUPER_ADMIN") %}
            <div class="form-group {% if form.user.vars.errors|length > 0 %}has-error{% endif %}">
                {{ form_label(form.user, 'Joueur', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form.user, {'attr': {'class': 'form-input', 'placeholder': 'Sélectionner un utilisateur'}}) }}
                {{ form_errors(form.user, {'attr': {'class': 'error-message'}}) }}
            </div>
        {% endif %}
        



        <br>
        <button onClick='redirectToPage("/tests")' class="form-button btn-gray"><i class="fas fa-arrow-left"></i> Retour</button>
        <button type="submit" class="form-button"><i class="fas fa-plus"></i> Créer</button>
                
        {{ form_end(form) }}
    </div>

    {% else %}   

    <div class="container-fluid login-message-container">
            <div class="login-message">
                <div class="text-center">
                    <p>Connectez-vous pour créer un nouveau test.</p>
                    <p><a href="{{ path('app_login') }}" class="btn btn-primary">Se connecter</a></p>
                </div>
            </div>
        </div>
    {% endif %}
{% endblock %}

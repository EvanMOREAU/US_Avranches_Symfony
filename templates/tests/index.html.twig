{# templates/tests/list.html.twig #}

{% extends 'base.html.twig' %}

{% block title %}Liste de vos tests{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="/css/tests.css" rel="stylesheet"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
{% endblock %}

{% block body %}
    <script src="https://kit.fontawesome.com/54e9e3700c.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js"></script>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const userDropdown = document.getElementById('userDropdown');
            
            function getParameterByName(name, url) {
                if (!url) url = window.location.href;
                name = name.replace(/[\[\]]/g, "\\$&");
                const regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
                    results = regex.exec(url);
                if (!results) return null;
                if (!results[2]) return '';
                return decodeURIComponent(results[2].replace(/\+/g, " "));
            }

            userDropdown.addEventListener('change', function () {
                const selectedUserId = this.value;
                const currentUrl = window.location.href;

                const updatedUrl = updateQueryStringParameter(currentUrl, 'userId', selectedUserId);
                window.location.href = updatedUrl;
            });

            function updateQueryStringParameter(uri, key, value) {
                const re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
                const separator = uri.indexOf('?') !== -1 ? "&" : "?";
                if (uri.match(re)) {
                    return uri.replace(re, '$1' + key + "=" + value + '$2');
                } else {
                    return uri + separator + key + "=" + value;
                }
            }
        });
        function validateTest(validationUrl, testId) {
            fetch(validationUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                },
                body: JSON.stringify({ testId }),
            })
            .then(response => response.json())
            .then(data => {
                console.log('Response data:', data);
                if (data.success) {
                    console.log('Test validé avec succès!');
                    window.location.reload();
                } else {
                    console.log('Erreur lors de la validation du test : ' + data.message);
                }
            })
            .catch(error => {
                console.error('Erreur lors de la validation du test:', error);
            });
        }

        function displayValidationConfirmationModal(validationUrl, testId) {
                const validationConfirmationMessage = "Voulez-vous vraiment valider ce test ?";

                // Set the confirmation message
                $('#displayValidationConfirmationModalBody' + testId).text(validationConfirmationMessage);

                // Show the modal
                $('#displayValidationConfirmationModal' + testId).modal('show');

                // Clear previous click event handlers to avoid multiple calls
                $('#confirmValidationButton' + testId).off('click');

                // Attach click event handler for the confirm button
                $('#confirmValidationButton' + testId).on('click', function () {
                    validateTest(validationUrl, testId);
                    // Hide the modal after confirmation
                    $('#displayValidationConfirmationModal' + testId).modal('hide');
                });
            }

        function cancelTest(cancelUrl, testId) {
            // Envoi de la requête AJAX pour annuler le test
            fetch(cancelUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                },
                body: JSON.stringify({ testId }),
            })
            .then(response => response.json())
            .then(data => {
                // Gestion de la réponse du serveur
                console.log('Response from server:', data);

                if (data.success) {
                    // Actualisez la page ou effectuez d'autres actions nécessaires
                    window.location.reload();
                } else {
                    alert('Erreur lors de l\'annulation du test : ' + data.message);
                }
            })
            .catch(error => {
                console.error('Erreur lors de l\'annulation du test:', error);
            });
        }
        function confirmDeletion(deletionUrl, testId) {
            // Envoi de la requête AJAX pour supprimer le test
            fetch(deletionUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                },
                body: JSON.stringify({ testId }),
            })
            .then(response => response.json())
            .then(data => {
                // Gestion de la réponse du serveur
                if (data.success) {
                    window.location.reload();
                } else {
                    alert('Erreur lors de la suppression du test : ' + data.message);
                }
            })
            .catch(error => {
                console.error('Erreur lors de la suppression du test:', error);
            });
        }

        function displayDeletionConfirmationModal(deletionUrl, testId) {
            // Construire le message de confirmation
            const deletionConfirmationMessage = `Voulez-vous vraiment supprimer ce test ?`;

            // Afficher la modal de confirmation Bootstrap pour la suppression
            $('#deletionConfirmationModal').modal('show');

            // Mettre à jour le texte de la modal avec le message de confirmation de suppression
            $('#deletionConfirmationModalBody').text(deletionConfirmationMessage);

            // Gérer l'événement lorsque l'utilisateur confirme la suppression
            $('#confirmDeletionButton').on('click', function () {
                // Appeler la fonction pour supprimer le test
                confirmDeletion(deletionUrl, testId);

                // Cacher la modal après confirmation
                $('#deletionConfirmationModal').modal('hide');
            });
        }
    </script>

    <div class="container-fluid">
        {% if app.user %}
            <div class="d-flex justify-content-between">
                <div class="text-begin">
                    <a href="{{ path('app_default') }}" class="btn btn-outline-primary ms-auto">
                        <i class="fas fa-home"></i>
                    </a>
                </div>
                <div class="text-end">
                    <a href="{{ path('app_logout') }}" class="btn btn-outline-danger me-auto"><i class="fas fa-sign-out-alt"></i></a>
                </div>
            </div>
            <div class="text-center">
                <h1 class="h1">Liste de vos tests {{ app.user.getFirstName() }}</h1>
                <a href="{{ path('app_tests_new', {'userId': app.user.getId()}) }}" class="btn btn-primary mt-3">Créer un nouveau test</a>
            </div>

            <div class="user-dropdown-container mt-3">
                {% if is_granted("ROLE_SUPER_ADMIN") %}
                    <label for="userDropdown" class="user-dropdown-label">Sélectionner un utilisateur :</label>
                    <select class="form-select" id="userDropdown" name="userDropdown">
                        <option value="" {% if selectedUserId is null %}selected{% endif %}>Tous les utilisateurs</option>

                        {% set allUsers = usersByCategory is defined and usersByCategory is not null ? usersByCategory : [users] %}
                        
                        {% set mergedUsers = [] %}

                        {% for category, users in allUsers %}
                            {% set mergedUsers = mergedUsers|merge(users) %}
                        {% endfor %}

                        {% set sortedUsers = mergedUsers|sort((a, b) => a.getCategory() <=> b.getCategory() == 0 ? a.getFirstName() <=> b.getFirstName() : a.getCategory() <=> b.getCategory()) %}

                        {% set currentCategory = '' %}

                        {% for user in sortedUsers %}
                            {% if user.getCategory() != currentCategory %}
                                {% if currentCategory != '' %}
                                    </optgroup>
                                {% endif %}
                                <optgroup label="{{ user.getCategory() }}">
                                    {% set currentCategory = user.getCategory() %}
                                {% endif %}
                                <option value="{{ user.getId() }}" {% if selectedUserId == user.getId() %}selected{% endif %}>
                                    {{ user.getFirstName() }}
                                </option>
                            {% endfor %}
                                </optgroup>
                    </select>
                {% endif %}
            </div>

            
            <div class="mt-4">
        {# Boutons de tri #}
        <div class="btn-group" role="group" aria-label="Basic example">
            <a href="{{ path('app_tests_index', {'order': 'asc', 'is_validated': app.request.query.get('is_validated')}) }}" class="btn btn-secondary {% if app.request.query.get('order') == 'asc' %}active{% endif %}">
                <i class="fas fa-arrow-up"></i> Plus ancien d'abord
            </a>
            <a href="{{ path('app_tests_index', {'order': 'desc', 'is_validated': app.request.query.get('is_validated')}) }}" class="btn btn-secondary {% if app.request.query.get('order') == 'desc' %}active{% endif %}">
                <i class="fas fa-arrow-down"></i> Plus récent d'abord
            </a>
            <a href="{{ path('app_tests_index', {'order': 'alphabetical', 'is_validated': app.request.query.get('is_validated')}) }}" class="btn btn-secondary {% if app.request.query.get('order') == 'alphabetical' %}active{% endif %}">
                <i class="fas fa-sort-alpha-down"></i> Par ordre alphabétique
            </a>
            <a href="{{ path('app_tests_index') }}" id="tousTestsButton" class="btn btn-secondary {% if app.request.query.get('is_validated') is null %}active{% endif %}">
                <i class="fas fa-list"></i> Tous les tests
            </a>
            <a href="{{ path('app_tests_index', {'is_validated': 'false'}) }}" class="btn btn-secondary {% if app.request.query.get('is_validated') == 'false' %}active{% endif %}">
                <i class="fas fa-times"></i> Non validés seulement
            </a>
            <a href="{{ path('app_tests_index', {'is_validated': 'true'}) }}" class="btn btn-secondary {% if app.request.query.get('is_validated') == 'true' %}active{% endif %}">
                <i class="fas fa-check"></i> Validés seulement
            </a>
        </div>
    </div>




            <div class="mt-4">
                {% for message in app.flashes('success') %}
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        {{ message }}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    <script>
                        // Masquer le message flash lentement avec effet de fondu
                        let alert = document.querySelector('.alert');

                        setTimeout(function() {
                            let opacity = 1;
                            let fadeOutInterval = setInterval(function() {
                                if (opacity > 0) {
                                    opacity -= 0.1;
                                    alert.style.opacity = opacity;
                                } else {
                                    clearInterval(fadeOutInterval);
                                    alert.style.display = 'none';
                                }
                            }, 100); // Ajustez la vitesse de fondu en modifiant la durée de l'intervalle
                        }, 2000); // Ajustez la durée avant le début du fondu
                    </script>
                {% endfor %}
            </div>

            <div class="tests-container mt-4">

                {% if tests|length > 0 %}
                    <div class="row row-cols-1 row-cols-md-4 g-4">
                        {% set hasTests = false %}
                        {% for test in tests %}
                            {% if is_granted("ROLE_SUPER_ADMIN") or (app.user == test.user) %}
                                <div class="col">
                                    <div class="card green" style="position: relative;">
                                        <div class="card-body">
                                        {# Validation indicators and title on the same line #}
                                        <div class="validation-indicators">
                                            {# Affiche l'icône de validation si le test est validé #}
                                            {% if test.isValidated %}
                                                <span class="validation-indicator validated">&#10004;</span>
                                            {# Affiche l'icône d'annulation si le test n'est pas validé #}
                                            {% elseif not test.isValidated %}
                                                <span class="validation-indicator not-validated">&#10008;</span>
                                            {% endif %}
                                        </div>


                                            {% if is_granted("ROLE_SUPER_ADMIN") %}
                                                {# Display additional information for superadmin #}
                                                <h5 class="card-title">Test de {{ test.user.getFirstName() }} {{ test.user.getLastName() }} ({{ test.user.getCategory() }})</h5><br>
                                            {% else %}
                                                {# Display simplified information for regular users #}
                                                <h5 class="card-title">Test du - {{ test.date|date('d/m/Y à H:i:s') }} </h5><br>
                                            {% endif %}
                                            <p class="card-text">
                                                VMA : {{ test.vma }} km/h<br>
                                                Cooper (12min) : {{ test.demicooper }} m<br>
                                                Demi-Cooper (6min) : {{ test.cooper }} m<br>
                                                Jongle Gauche : {{ test.jonglegauche }}<br>
                                                Jongle Droit : {{ test.jongledroit }}<br>
                                                Jongle Tête : {{ test.jongletete }}<br>
                                                Conduite de balle : {{ test.conduiteballe|split('.')|first }}.{{ test.conduiteballe|split('.')|last|default('000') }}s<br>
                                                Vitesse : {{ test.vitesse|split('.')|first }}.{{ test.vitesse|split('.')|last|default('000') }}s<br>
                                                Date du test : {{ test.date|date('à H:i:s') }} le {{ test.date|date('d/m/Y') }}
                                               {% if test.video %}
                                                    {% if test.isValidated %}
                                                        {# Display a message indicating that the video is not available #}
                                                        <p class="text-muted">La vidéo n'est pas disponible.</p>
                                                    {% else %}
                                                        <div class="d-flex justify-content-center">
                                                            <button class="btn btn-secondary" type="button" data-bs-toggle="modal" data-bs-target="#videoModal{{ test.id }}">
                                                                Afficher la vidéo
                                                                <i class="fas fa-play"></i>
                                                            </button>
                                                        </div>

                                                        <!-- Video Modal -->
                                                        <div class="modal fade" id="videoModal{{ test.id }}" tabindex="-1" aria-labelledby="videoModalLabel{{ test.id }}" aria-hidden="true">
                                                            <div class="modal-dialog modal-dialog-centered">
                                                                <div class="modal-content">
                                                                    <div class="modal-header">
                                                                        <h5 class="modal-title" id="videoModalLabel{{ test.id }}">Vidéo du test</h5>
                                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                    </div>
                                                                    <div class="modal-body">
                                                                        {% if not test.isValidated %}
                                                                            {% if not test.video %}
                                                                                {# Display a message indicating that the video is not available #}
                                                                                <p class="text-muted">La vidéo n'est pas disponible.</p>
                                                                            {% else %}
                                                                                <video width="100%" height="100%" controls>
                                                                                    <source src="{{ asset('uploads/videos/' ~ test.video) }}" type="video/mp4">
                                                                                    Your browser does not support the video tag.
                                                                                </video>
                                                                            {% endif %}
                                                                        {% else %}
                                                                            {# Display the video for validated tests #}
                                                                            <video width="100%" height="100%" controls>
                                                                                <source src="{{ asset('uploads/videos/' ~ test.video) }}" type="video/mp4">
                                                                                Your browser does not support the video tag.
                                                                            </video>
                                                                        {% endif %}
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    {% endif %}
                                                {% else %}
                                                    {# Display a message indicating that there is no video #}
                                                    <p class="text-muted">Aucune vidéo n'a été ajoutée à ce test.</p>
                                                {% endif %}</p>
                                            {% if is_granted("ROLE_SUPER_ADMIN") %}
                                                <div class="test-owner">Joueur : {{ test.user.getFirstName() }} ({{ test.user.getCategory() }})</div>
                                                
                                                
                                            {% endif %}
                                            <div class="d-flex justify-content-between mt-3">
                                                {% if is_granted("ROLE_SUPER_ADMIN") %}
                                                <a href="#" class="btn btn-danger" onclick="displayDeletionConfirmationModal('{{ path('app_tests_delete', {'id': test.id}) }}', {{ test.id }})">
                                                    <i class="fa fa-trash"></i> Supprimer
                                                </a>
                                                <div class="modal fade" id="deletionConfirmationModal" tabindex="-1" aria-labelledby="deletionConfirmationModalLabel" aria-hidden="true">
                                                    <div class="modal-dialog modal-dialog-centered">
                                                        <div class="modal-content">
                                                            <div class="modal-header">
                                                                <h5 class="modal-title" id="deletionConfirmationModalLabel">Confirmation de suppression</h5>
                                                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                            </div>
                                                            <div class="modal-body" id="deletionConfirmationModalBody"></div>
                                                            <div class="modal-footer">
                                                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                                                                <button type="button" class="btn btn-danger" id="confirmDeletionButton">Confirmer</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                {% if not test.isValidated %}
                                                    <div class="btn-group" role="group" aria-label="Actions">
                                                        <button class="btn btn-success custom-btn" onclick="displayValidationConfirmationModal('{{ path('app_validate_test', {'id': test.id}) }}', {{ test.id }})">
                                                            <i class="fas fa-check"></i> Valider
                                                        </button>
                                                    </div>

                                                    <div class="modal fade" id="displayValidationConfirmationModal{{ test.id }}" tabindex="-1" aria-labelledby="displayValidationConfirmationModalLabel{{ test.id }}" aria-hidden="true">
                                                        <div class="modal-dialog modal-dialog-centered">
                                                            <div class="modal-content">
                                                                <div class="modal-header">
                                                                    <h5 class="modal-title" id="displayValidationConfirmationModalLabel{{ test.id }}">Confirmation de validation</h5>
                                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                </div>
                                                                <div class="modal-body" id="displayValidationConfirmationModalBody{{ test.id }}"></div>
                                                                <div class="modal-footer">
                                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                                                                    <button type="button" class="btn btn-success" id="confirmValidationButton{{ test.id }}">
                                                                        Valider
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <script>
                                                        // Script to handle modal button click after modal is loaded
                                                        $('#validationConfirmationModal{{ test.id }}').on('shown.bs.modal', function () {
                                                            // Set the confirmation message
                                                            $('#validationConfirmationModalBody').text("Voulez-vous vraiment valider ce test ?");

                                                            // Attach click event handler for the confirm button
                                                            $('#confirmValidationButton').on('click', function () {
                                                                validateTest('{{ path('app_validate_test', {'id': test.id}) }}', {{ test.id }});
                                                                $('#validationConfirmationModal{{ test.id }}').modal('hide');
                                                            });
                                                        });
                                                    </script>
                                                {% endif %}
                                                {% if test.isValidated %}
                                                    <div class="btn-group" role="group" aria-label="Actions">
                                                        <button class="btn btn-danger custom-btn" onclick="cancelTest('{{ path('app_cancel_test', {'id': test.id}) }}', {{ test.id }})" data-test-id="{{ test.id }}">
                                                            <i class="fas fa-times"></i> Rejeter
                                                        </button>
                                                    </div>
                                                {% endif %}
                                                {% endif %}
                                                {% if not test.isValidated or is_granted("ROLE_SUPER_ADMIN") %}
                                                    {# Display the "Modifier" button for non-validated tests or for the superadmin #}
                                                    <a href="{{ path('app_tests_edit', {'id': test.id}) }}" class="btn btn-secondary"><i class="fa fa-pencil"></i> Modifier</a>
                                                {% endif %}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                {% set hasTests = true %}
                            {% endif %}
                        {% endfor %}
                    </div>

                    {% if not hasTests %}
                        <div class="row mt-4">
                            <div class="col">
                                <div class="text-center">
                                    <p>Ce joueur n'a aucun test !</p>
                                </div>
                            </div>
                        </div>
                    {% endif %}
                </div>
            {% else %}
                <div class="row mt-4">
                    <div class="col">
                        <div class="text-center">
                            <p>Il n'y a aucun test !</p>
                        </div>
                    </div>
                </div>
            {% endif %}
        {% else %}
            <div class="container-fluid login-message-container">
                <div class="login-message">
                    <div class="text-center">
                        <p>Connectez-vous pour voir vos tests.</p>
                        <p><a href="{{ path('app_login') }}" class="btn btn-primary">Se connecter</a></p>
                    </div>
                </div>
            </div>
        {% endif %}
    </div>

    <!-- Script Bootstrap -->
{% endblock %}
